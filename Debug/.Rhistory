x=covs$slope,
y=covs$y,
type='n',
xlab='Slope',
ylab='Probability of permafrost'
)
## Split the data into bins, and plot each rectangle individually
for (bin in split(covs, ceiling(seq(nrow(covs))/100))) {
with(bin, rect(min(slope), 0, max(slope), mean(y), col='lightgrey'))
}
rm(bin)
d = t(matrix( c(7,3,2,3,2,2,852,268,128,150,
127,74,5140,1681,860,963,866,
470,26419,8795,4521,5375,4514,2487),
nrow=6, ncol=4 ))
colnames(d)=c("A", "B", "C", "D", "E", "F")
d
d=rbind(NA,d)
d
require(plotrix)
install.packages('plotrix')
require(plotrix)
a = gap.barplot(as.matrix(d),
gap=c(9600,23400),
ytics=c(0,3000,6000,9000,24000,25200,26400),
xaxt='n') # disable the default x-axis
x = cut(x = f$V2, breaks=seq(min(f$V2)-1, max(f$V2)+1, offset))
x
x
x[1]
x[2]
x[3]
x[4]
x[5]
size(x)
length(x)
x[1:10]
medical.example <-
data.frame(patient = 1:100,
age = rnorm(100, mean = 60, sd = 12),
treatment = gl(2, 50,
labels = c("Treatment", "Control")))
medical.example
View(medical.example)
View(medical.example)
tapply(baseball.example$batting.average, baseball.example$team,
max)
baseball.example <-
data.frame(team = gl(5, 5,
labels = paste("Team", LETTERS[1:5])),
player = sample(letters, 25),
batting.average = runif(25, .200, .400))
tapply(baseball.example$batting.average, baseball.example$team,
max)
View(baseball.example)
f$groups = cut(x = f$V2, breaks=seq(0, max(f$V2)+10, offset))
f$bygroups = tapply(X=f$V11, INDEX=f$groups, FUN=mean)
f$bygroups
delta = max(f$V2) - min(f$V2)
offset = floor(delta/5)
View(f)
tapply(X=f$V11, INDEX=f$groups, FUN=mean)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
p.5 = mean(f$V4)
p.10 = mean(f$V5)
map = mean(f$V8)
ndcg.5 = mean(f$V9)
ndcg.5 = mean(f$V10)
mrr = mean(f$V11)
#cut(x = f$V2, breaks=seq(from=min(f$V2), to=max(f$V2)), by=10)
delta = max(f$V2) - min(f$V2)
offset = floor(delta/5)
f$groups = cut(x = f$V2, breaks=seq(0, max(f$V2)+10, offset))
#f$groups = cut(x = f$V2, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
View(f)
bygroups
barplot(height = bygroups, xlab = "time", ylab = "occurence")
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
View(f)
delta = max(f$total) - min(f$total)
offset = floor(delta/5)
seq(1,10, by=2)
f$groups = cut(x = f$total, breaks=seq(min(f$total), max(f$total), offset))
View(f)
View(f)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
delta = max(f$total) - min(f$total)
offset = floor(delta/5)
f$groups = cut(x = f$total, breaks=seq(min(f$total)-1, max(f$total)+1, offset))
View(f)
max(f$total)
seq(min(f$total)-1, max(f$total)+1, offset)
table(f$total)
f$groups = cut(x = f$total, breaks=5)
View(f)
View(f)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
bygroups
barplot(height = bygroups, ylab = "Average MRR")
barplot(height = bygroups, ylab = "Average MRR", xlab="Number of items user has rated")
rqeuire(ggplot2)
require(ggplot2)
ggplot(bygroups)
#https://www.r-bloggers.com/using-r-barplot-with-ggplot2/
library(ggplot2)
library(plyr)
library(reshape2)
n <- 10
group <- rep(1:4, n)
mass.means <- c(10, 20, 15, 30)
mass.sigma <- 4
score.means <- c(5, 5, 7, 4)
score.sigma <- 3
mass <- as.vector(model.matrix(~0+factor(group)) %*% mass.means) +
rnorm(n*4, 0, mass.sigma)
score <- as.vector(model.matrix(~0+factor(group)) %*% score.means) +
rnorm(n*4, 0, score.sigma)
data <- data.frame(id = 1:(n*4), group, mass, score)
melted <- melt(data, id.vars=c("id", "group"))
means <- ddply(melted, c("group", "variable"), summarise,
mean=mean(value))
means.barplot <- qplot(x=group, y=mean, fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
plot(means.barplot)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
View(data)
melted <- melt(data, id.vars=c("id", "group"))
View(melted)
qplot(x=group, y=mean, fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
qplot
?qplot
means.barplot <- qplot(x=group, y=mean, fill=variable,
data=means, geom="bar", stat="identity",
position="dodge")
means.barplot
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
library(ggplot2)
# Basic barplot
p<-ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity")
p
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
library(ggplot2)
ggplot(mtcars, aes(x=factor(cyl)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
library(ggplot2)
df2 <- data.frame(supp=rep(c("VC", "OJ"), each=3),
dose=rep(c("D0.5", "D1", "D2"),2),
len=c(6.8, 15, 33, 4.2, 10, 29.5))
View(df2)
library(ggplot2)
df2 <- data.frame(supp=rep(c("VC", "OJ"), each=3),
dose=rep(c("D0.5", "D1", "D2"),2),
len=c(6.8, 15, 33, 4.2, 10, 29.5))
ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
geom_bar(stat="identity", position=position_dodge())
#http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization
library(ggplot2)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
f$groups = cut(x = f$total, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
#http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization
library(ggplot2)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
f$groups = cut(x = f$total, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
df2 <- data.frame(supp=rep(c("VC", "OJ"), each=3),
dose=rep(c("D0.5", "D1", "D2"),2),
len=c(6.8, 15, 33, 4.2, 10, 29.5))
View(df2)
?aes
#http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization
library(ggplot2)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
f$groups = cut(x = f$total, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
ggplot(data=f, aes(y=f$V11, x=f$groups)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=f, aes(y=bygroups, x=f$groups)) +
geom_bar(stat="identity", position=position_dodge())
brygroups
bygroups
bygroups
f$groups
f$groups$levels
f$groups.levels
bygroups.
bygroups
bygroups.x
?tapply
table(bygroups)
unique(f$groups)
ggplot(data=f, aes(y=bygroups, x=unique(f$groups))) +
geom_bar(stat="identity", position=position_dodge())
unique(f$groups)
unique(f$groups).levels
f$groups.levels
f$groups$levels
table(f$groups)
table(f$groups)
ggplot(data=f, aes(x=f$groups)) +
geom_bar(stat="mean", position=position_dodge())
ggplot(data=f, aes(x=f$groups)) + geom_bar(stat="bin", position=position_dodge())
ggplot(data=f, groupName=f$groups)
ggplot(data=f, groupName=f$groups) +  geom_bar(stat="identity", position=position_dodge())
View(f)
ggplot(data=f, groupName='groups') +  geom_bar(stat="identity", position=position_dodge())
bygroups
table(bygroups)
bygroups
vector(bygroups)
bygroups
as.vector(bygroups)
f$groups
f$groups
f$groups[1]
f$groups[50]
f$groups$levels
f$groups.levels
table(f$groups)
table(f$groups).names
table(f$groups).x
table(f$groups).y
levels(f$groups)
bygroups
as.vector(bygroups)
ggplot(aes(y=as.vector(bygroups), x=levels(f$groups))) +  geom_bar(stat="identity", position=position_dodge())
ggplot(aes(y=as.vector(bygroups)) +  geom_bar(stat="identity", position=position_dodge())
#http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization
library(ggplot2)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
f$groups = cut(x = f$total, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
ggplot(aes(y=as.vector(bygroups)) +  geom_bar(stat="identity", position=position_dodge())
)
ggplot(aes(y=as.vector(bygroups))) +  geom_bar(stat="identity", position=position_dodge())
f$groups
levels(f$groups)
as.vector(levels(f$groups))
table(f$rgoups)
table(f$groups)
colnames(table(f$groups))
x = table(f$groups)
x
dim(x)
colnames(x)
as.data.frame(f$groups)
levels(f$groups)
bygroups
bygroup.names
bygroups
f$groups
bygroups
for( i in levels(f$groups)) print(i)
as.array(levels(f$groups))
as.array(levels(f$groups))[2]
as.array(levels(f$groups))[1]
bygroups
as.vector(bygroups)
ggplot(aes(y=as.vector(bygroups), x=as.vector(levels(f$groups))) +  geom_bar(stat="identity", position=position_dodge())
ggplot(aes(y=as.vector(bygroups), x=as.vector(levels(f$groups)))) +  geom_bar(stat="identity", position=position_dodge())
ggplot(aes(y=as.vector(bygroups), x=as.vector(levels(f$groups))))
ggplot(data=f, aes(y=as.vector(bygroups), x=as.vector(levels(f$groups)))) +  geom_bar(stat="identity", position=position_dodge())
f2 = as.data.frame(x=cbind(as.vector(bygroups), as.vector(levels(f$groups))))
View(f2)
View(f2)
f2 = as.data.frame(x=cbind(as.vector(bygroups), as.vector(levels(f$groups))))
ggplot(data=f2, aes(y=f2$V1, x=f2$V2))) +  geom_bar(stat="identity", position=position_dodge())
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity", position=position_dodge())
ggplot(data=f2, aes(y=round(f2$V1,2), x=f2$V2)) +  geom_bar(stat="identity", position=position_dodge())
f2$V1
View(f2)
f2V1 = round(f$V1, 2)
View(f2)
View(f2)
f2$V1 = round(f$V1, 2)
View(f2)
round(f$V1, 2)
f2$V1 = round(f2$V1, 2)
ff2$V1
f2$V1
as.numeric(bygroups)
f2 = as.data.frame(x=cbind(numeric(bygroups), as.vector(levels(f$groups))))
f2 = as.data.frame(x=cbind(as.numeric(bygroups), as.vector(levels(f$groups))))
View(f2)
f2 = as.data.frame(x=cbind(round(as.numeric(bygroups),2), as.vector(levels(f$groups))))
View(f2)
f2$V1 = round(f2$V1, 2)
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity", position=position_dodge())
source('~/Dropbox/artigos-fonte/recsys-2016/presentation/barplot-script-ggplot.R', echo=TRUE)
ibrary(ggplot2)
setwd("~/")
#f = read.csv('map-ml.csv')
f = read.csv('breakdown.csv', header=FALSE)
f$total = f$V2+f$V3
f$groups = cut(x = f$total, breaks=5)
bygroups= tapply(X=f$V11, INDEX=f$groups, FUN=mean)
f2 = as.data.frame(x=cbind(round(as.numeric(bygroups),2), as.vector(levels(f$groups))))
f2$V1 = round(f2$V1, 2)
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity", position=position_dodge())
f$groups
as.vector(levels(f$groups))
View(f2)
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity", position=position_dodge())
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity")
ggplot(data=f2, aes(y=f2$V1, x=f2$V2))
ggplot(data=f2, aes(y=f2$V1, x=f2$V2)) +  geom_bar(stat="identity")
View(f2)
factor(f$groups)
levels(f$groups)
f2 = as.data.frame(x=cbind(round(as.numeric(bygroups),2), as.vector(levels(f$groups))))
f$levels = levels(f$groups)
View(f2)
f2 = as.data.frame(x=cbind(round(as.numeric(bygroups),2), as.vector(levels(f$groups))))
f2$levels = levels(f$groups)
View(f2)
ggplot(data=f2, aes(f2$levels)) +  geom_bar(stat="identity")
ggplot(data=f2, aes(y=f2$V1, f2$levels)) +  geom_bar(stat="identity")
ggplot(data=f2, aes(y=f2$V1, f2$levels)) +  geom_bar()
ggplot(data=f2, aes(y=f2$V1, f2$levels))
ggplot(data=f2, aes(y=f2$V1, f2$levels)) +  geom_bar(stat="identity")
ggplot(data=f2, aes(y=f2$V1, x=f2$levels)) +  geom_bar(stat="identity")
ggplot(data=f2, aes(levels)) +  geom_bar(stat="identity")
schools <- read.table ("schools.dat", header=TRUE)
J <- nrow(schools)
y <- schools$estimate
sigma.y <- schools$sd
data <- list ("J", "y", "sigma.y")
inits <- function() {list (theta=rnorm(J,0,100), mu.theta=rnorm(1,0,100), sigma.theta=runif(1,0,100))}
parameters <- c("theta", "mu.theta", "sigma.theta")
schools.sim <- bugs (data, inits, parameters, "schools.bug", n.chains=3, n.iter=1000)
options(repos = c(getOption("repos"), rstan = "http://wiki.stan.googlecode.com/git/R")) install.packages('rstan', type = 'source')
options(repos = c(getOption('repos'), rstan = 'http://wiki.stan.googlecode.com/git/R')) install.packages('rstan', type = 'source')
?pnorm
rtnorm <- function(n, mu, sigma, a, b){
u = runif(n);
inverse = u*(pnorm(b, mu, sigma) - pnorm(a, mu, sigma)) + pnorm(a, mu, sigma);
qnorm(inverse, mu, sigma);
}
rtnorm(20, 100, 10, 95, 105)
x=c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
xbar=mean(x)
sh1=(n/2)+a
sigma=theta=rep(0,Nsim)
#init arrays
sigma{1}=1/rgamma(1,shape=a,rate=b)
#init chains
B=sigma2{1}/(sigma2{1}+n*tau2)
theta{1}=rnorm(1,m=B*theta0+(1-B)*xbar,sd=sqrt(tau2*B))
for (i in 2:Nsim){
B=sigma2[i-1]/(sigma2[i-1]+n*tau2)
theta[i]=rnorm(1,m=B*theta0+(1-B)*xbar,sd=sqrt(tau2*B))
ra1=(1/2)*(sum((x-theta[i])^2))+b
sigma2[i]=1/rgamma(1,shape=sh1,rate=ra1)
}
x=c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
xbar=mean(x)
sh1=(n/2)+a
sigma=theta=rep(0,Nsim)
#init arrays
sigma{1}=1/rgamma(1,shape=a,rate=b)
#init chains
B=sigma2{1}/(sigma2{1}+n*tau2)
theta{1}=rnorm(1,m=B*theta0+(1-B)*xbar,sd=sqrt(tau2*B))
Nsim=2
x=c(91,504,557,609,693,727,764,803,857,929,970,1043,1089,1195,1384,1713)
xbar=mean(x)
sh1=(n/2)+a
sigma=theta=rep(0,Nsim)
#init arrays
sigma{1}=1/rgamma(1,shape=a,rate=b)
#init chains
B=sigma2{1}/(sigma2{1}+n*tau2)
theta{1}=rnorm(1,m=B*theta0+(1-B)*xbar,sd=sqrt(tau2*B))
for (i in 2:Nsim){
B=sigma2[i-1]/(sigma2[i-1]+n*tau2)
theta[i]=rnorm(1,m=B*theta0+(1-B)*xbar,sd=sqrt(tau2*B))
ra1=(1/2)*(sum((x-theta[i])^2))+b
sigma2[i]=1/rgamma(1,shape=sh1,rate=ra1)
}
x = c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944,0.0505313,-0.730551,-0.393573,-0.441037,-0.113014,-0.23439,1.33834,0.0238353,1.75569,-0.592084,0.193023,2.35858,2.83542,-0.770908,2.56777,0.763801,-1.17758,0.0476455,-1.23425,-0.922346,0.685395,0.379197,-2.58622,0.0379023,0.814239,-0.409123,0.702159,0.221592,0.0629221,-0.467678,-0.579663,-0.0285545,0.34805,0.492484,-0.268436,0.0593377,-1.00421,1.67491,-0.726209,-0.875982,-0.449473,0.722712,1.17073,2.13975,-0.239757,-1.2033,-0.640274,1.54968,0.371682,-0.131305,-0.613299,0.14908,0.937905,-0.683983,-0.235396,-0.446957,1.17484,-0.572371,-0.0479286,-2.74776,1.35409,-0.629265,0.483006,-1.02637,1.7825,-0.774486,0.823291,-0.540678,1.8626,-1.70498,-1.09847,0.920589,-0.757891,0.145231,0.920078,0.988638,-0.280452,-1.57093,-1.27608,-0.127517,0.459375,-1.00312,0.741354,-2.56207,0.208709,-0.960484,1.5975,1.06281,0.226961,1.77395,-0.736686,2.05931,-0.373851,-0.314101,-1.29715,-0.383016,0.660181,-0.712546,-1.12765,0.522128,-1.99117,0.194943,-0.268178,-2.6003,-0.698022,0.270233,-0.488562,0.0924234,0.706693,0.383296,0.350079,-0.354873,-0.346443,0.246892,0.00577599,-0.922533,0.07008,1.49447,1.01989,0.73331,-0.904243,1.23939,-1.08378,1.20624,0.388979,-0.444891,0.0615206,0.71135,-0.605049,-1.85275,-0.98071,-0.951543,-0.584327,-0.47703,-0.0861755,-0.290669,-0.263845,0.639671,0.37658,2.60894,-1.29467,0.850824,1.19274,-0.475818,-1.69803,0.286802,-0.90465,0.142143,1.75214,-1.07145,-0.0118416,-0.809848,0.7608,1.07207,-1.20762,1.55586,0.187297,-0.445046,-0.326216,-0.360563,-0.913437,-0.0685937,0.845642,0.832128,-0.115916,-0.581525,-0.223969,0.193619,-0.238768,1.20506,-0.128535,-0.0547503,-0.196416,-0.179572,-0.390093,-0.239214,-2.33939,-0.307341,-0.279058,-0.769162,-1.16624,-1.85186,1.06825,-1.16783,0.916554,0.675454,0.657191,0.161628,-0.322557,0.0740254,-1.11372,0.400462,0.256225,1.2767,-1.25194,-0.953392,-0.589873,0.953267,0.20385,-1.61178,-0.0271384,-0.244183,-0.940522,0.624366,1.33499,-2.42106,-0.0993983,0.0209465,-0.894768,-0.532601,0.635124,-0.443554,1.18315,0.275187,0.293763,0.670444,-0.171357,0.415241,0.710353,-0.352332,-0.445409,0.469941,-1.0252,0.696668,-0.740156,-0.249543,0.136189,-2.05721,0.298704,1.27754,0.760148,1.7184,-0.0617601,0.430346,-0.678251,-0.120295,-1.7191,-2.28182,0.243156,-0.0236125,-0.305193,-2.6756,1.18392,0.860617,0.157132,0.688557,0.575976,0.774618,-0.849043,1.43132,-1.00805,1.89471,0.566126,0.826605,-1.60984,1.40348,-0.481359,0.00930049,0.113972,1.95469,-2.04236,-0.974712,-0.892576,-0.506792,-0.223765,-0.0558188,-1.45841,-0.907228,-1.00514,-1.36941,-1.17754,-0.756051,0.282106,0.528317,-0.166291,-0.127763,-1.95938,0.0704956,1.19819,0.826672,-0.393697,1.25706,-0.250833,0.692461,0.263649,-0.192564,-1.03054,-0.0141803,0.480954,-1.69332,0.578147,0.257959,0.320296,-1.13119,-0.877084,-0.0990046,-0.256396,-0.239401,1.83907,-0.592667,-0.951821,0.759519,1.87191,1.24127,1.79953,-0.572023,0.118107,-0.946566,-0.195974,-1.93146,-1.5359,0.279401,-0.858574,-1.50562,-0.377309,0.680105,0.751812,-0.483578,-0.0566399,0.843893,-0.590584,-1.54866,-0.125404,-0.0505595,0.236804,0.0440195,0.271326,0.496743,-0.276522,0.534092,0.927121,1.20519,0.31565,1.34123,1.14199,0.684186,-0.332741,0.916494,-0.534523,0.469594,1.20134,1.95757,1.41581,-0.816497,-0.798932,0.370647,-0.67009,0.561738,2.59991,-0.742179,-0.948318,-1.08092,-0.721695,1.11569,-0.87944,0.759595,0.981577,-1.99203,0.239944,-0.672274,-0.51009,1.64954,-1.50982,1.48974,-0.360708,0.331897,1.0928,-0.592497,-1.48426,1.76637,-0.666377,-0.597681,-1.74931,-1.5444,0.66106,1.76334,0.817577,-0.786617,0.144086,1.66988,0.4719,0.121418,0.839736,0.800338,-0.414775,0.51069,-0.114125,-0.942051,-0.762005,1.75732,0.384521,-0.138036,-1.80066,2.13703,1.44778,0.940555,-1.00221,-0.0562867,-0.804801,1.58892,-0.347559,0.00750782,-1.02463,1.09062,0.401611,-0.458097,-0.568751,0.771943,0.475755,0.000540304,0.252255,0.330555,-1.87355,-0.463233,-0.297197,-0.133187,-0.643824,0.903644,-0.146948,-0.107433,-0.530228,-1.24749,0.27954,-0.0980432,-0.86535,-0.211914,-0.313872,-1.91511,-1.16942,0.0247464,-0.437356,-0.123717,0.797245,0.374889,0.0175804,0.862693,0.263051,0.0497303,-1.1418,0.866006,0.140864,0.91012,1.28506,-1.29939,-1.44554,1.38499,-0.352137,-0.434191,2.58894,1.51688,1.0397,1.63624,0.387886,-1.52454,0.450551,-0.991634,-0.634463,0.508014,0.255328,-0.852875,-1.15425,1.59213,-0.932445,-0.0735401,-1.65636,0.718339,-0.724945,-0.912072,0.247135,-0.766667,1.71723,0.694,0.738253,0.977113,1.22426,0.123323,1.22479,0.651566,0.0493591,1.20562,0.405776,0.145692,-0.634544,1.15212,1.1771,-0.691379,1.45058,0.0879575,0.361179,1.49863,1.80024,1.13737,0.151242,-1.55013,-1.27781,0.248945,0.403932,1.71196,-1.40088,1.90506,-0.470857,0.311826,-0.981263,-0.382993,-0.738681,-0.338765,1.19947,0.903892,-0.567333,-1.00623,1.37239,-0.354831,1.40808,0.611756,0.903809,0.206904,0.21208,-0.206352,-0.524162,0.477542,-1.22331,-0.259239,-2.53594,1.28521,-2.0266,-1.47344,2.50143,-2.12955,2.14526,0.492998,-0.961539,0.206811,0.956103,-0.470812,0.308851,0.233875,2.12819,-1.19884,-0.0153976,0.335124,-0.471504,0.0835769,0.0187333,1.44126,-1.52513,0.313009,-0.581568,-1.65076,-2.23446,-0.223014,0.0769185,-1.09958,1.95241,-1.12096,1.37564,0.39996,2.1002,-1.22622,-0.343923,-0.760646,0.121983,-1.96496,1.62565,-1.40658,0.133015,2.00635,-0.995799,1.20526,-0.609727,-0.312352,0.123684,-0.245994,0.491584,0.319111,-1.04466,0.495194,-0.253735,1.41119,-0.56756,-1.30228,1.09906,1.31373,-0.0900313,1.95215,0.949061,-1.0359,1.17131,-1.18893,1.50331,0.38682,0.56494,-1.36886,-0.7817,0.536743,-0.725222,1.27791,1.20402,-0.00664175,2.17244,1.57482,-1.57834,2.05829,1.58737,0.220249,-0.0476004,0.92778,1.10707,1.4891,0.7172,0.0994616,0.796349,0.821698,1.83852,-0.341803,1.74101,-0.435336,-1.52391,-1.20853,0.155464,-1.2487,0.420365,0.681091,-0.909799,-1.73658,0.663172,-0.171469,0.200087,0.823703,-1.08156,-0.355216,-1.32926,-0.859909,0.0685791,-0.725892,0.820113,-0.882168,-1.04703,0.357113,-0.277918,1.02509,-1.19865,-1.69336,-0.905029,0.0550042,-0.101734,1.06564,-0.18891,0.471295,-0.576794,1.45865,-0.179221,-1.05727,-0.40611,-3.31529,1.22153,0.717509,0.472039,-1.80575,1.17426,-1.54117,-1.82175,0.272756,-0.360411,2.12292,-0.475482,-0.0559247,-0.939945,1.05539,0.462826,0.851765,0.357388,-1.93681,1.22115,0.368455,1.10723,1.07073,-0.778208,-0.404141,0.380355,1.15878,-0.541673,-0.692856,-0.607784,-0.493268,1.70383,-0.53029,0.179893,0.620405,0.691866,-0.393938,-0.365272,0.650148,0.755917,0.490784,0.477606,-0.869321,-0.244309,0.21539,-1.22317,-0.188167,0.443953,2.78498,-0.287035,0.00241905,-0.991488,0.190103,-1.12923,0.312584,-1.83841,-0.0667926,0.509688,-0.592721,0.494851,-0.99246,-0.0421479,-0.721317,0.185542,0.280253,0.419553,0.973315,-0.0063385,0.118248,0.457473,-1.59582,-0.581827,2.13592,-0.342395,-1.77805,1.28222,-0.344598,2.36309,-0.0858066,-0.636293,-0.804146,0.642485,-2.10587,-0.90718,-1.86533,1.28251,1.4067,-1.43847,1.62761,-0.820709,-0.59147,0.499039,-0.202078,-1.56428,-0.40327,-0.123754,0.515159,0.960639,-0.590982,-0.63081,-0.823509,-1.54977,0.508122,-1.09967,-1.20381,0.54964,-1.07875,1.43509,0.603308,-0.813847,0.833421,0.356694,0.450058,-0.0989108,-0.309313,0.861877,-1.23116,-1.41738,1.54679,-0.178754,0.211784,2.18997,0.209118,-1.73024,-0.450788,0.743288,0.950516,0.720361,0.41689,0.139361,1.04443,-0.871391,-0.5486,-0.738144,-0.401309,-1.75225,0.117644,-0.059173,-0.730496,0.490054,-1.35413,-0.583986,-0.904426,-0.715602,-1.22121,1.03725,-0.389252,1.16809,-0.268089,-0.360097,-1.3747,0.185741,0.887002,0.219237,-0.702774,-1.70295,0.257928,0.27771,0.485674,-0.397808,-0.38458,0.152117,-0.211321,0.714618,-0.908958,0.502254,-0.138773,1.01315,0.618277,0.184162,-0.609813,-1.63508,1.38591,-0.449845,-0.746627,-1.58793,-1.76922,1.40789,0.839815,0.943385,-0.473265,-2.09018,2.13853,-0.526963,1.38525,0.342355,1.04839,1.40722,0.286138,0.237248,-0.846909,2.39128,-0.962609,-1.58257,-0.214454,-1.57374,-0.705016,0.330762,0.263584,-0.650469,-0.583554,-2.04934,1.68047,1.28027,-1.35953,0.847669,0.385278,-1.17972,-0.286812,1.33971,-0.805864,0.164413,-0.360927,0.142046,2.47982,0.557712,-0.902979,1.11601,-1.21899,-0.79623,0.563259,-0.807458,0.648793,0.502162,-0.247549,1.08257,1.20038,0.359844,-0.883164,-1.37452,1.18809,-0.875877,-0.866671,-0.231599,0.0216663,-0.427115,-0.119895,2.14557,-1.12435,-0.172992,-0.970896,0.123382,0.22246,-0.997131,0.0870233,-0.94763,1.39563)
)
x=c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944,0.0505313,-0.730551,-0.393573,-0.441037,-0.113014,-0.23439,1.33834,0.0238353,1.75569,-0.592084,0.193023,2.35858,2.83542,-0.770908,2.56777,0.763801,-1.17758,0.0476455,-1.23425,-0.922346,0.685395,0.379197,-2.58622,0.0379023,0.814239,-0.409123,0.702159,0.221592,0.0629221,-0.467678,-0.579663,-0.0285545,0.34805,0.492484,-0.268436,0.0593377,-1.00421,1.67491,-0.726209,-0.875982,-0.449473,0.722712,1.17073,2.13975,-0.239757,-1.2033,-0.640274,1.54968,0.371682,-0.131305,-0.613299,0.14908,0.937905,-0.683983,-0.235396,-0.446957,1.17484,-0.572371,-0.0479286,-2.74776,1.35409,-0.629265,0.483006,-1.02637,1.7825,-0.774486,0.823291,-0.540678,1.8626,-1.70498,-1.09847,0.920589,-0.757891,0.145231,0.920078,0.988638,-0.280452,-1.57093,-1.27608,-0.127517,0.459375,-1.00312,0.741354,-2.56207,0.208709,-0.960484,1.5975,1.06281,0.226961,1.77395,-0.736686,2.05931,-0.373851,-0.314101,-1.29715,-0.383016,0.660181,-0.712546,-1.12765,0.522128,-1.99117,0.194943,-0.268178,-2.6003,-0.698022,0.270233,-0.488562,0.0924234,0.706693,0.383296,0.350079,-0.354873,-0.346443,0.246892,0.00577599,-0.922533,0.07008,1.49447,1.01989,0.73331,-0.904243,1.23939,-1.08378,1.20624,0.388979,-0.444891,0.0615206,0.71135,-0.605049,-1.85275,-0.98071,-0.951543,-0.584327,-0.47703,-0.0861755,-0.290669,-0.263845,0.639671,0.37658,2.60894,-1.29467,0.850824,1.19274,-0.475818,-1.69803,0.286802,-0.90465,0.142143,1.75214,-1.07145,-0.0118416,-0.809848,0.7608,1.07207,-1.20762,1.55586,0.187297,-0.445046,-0.326216,-0.360563,-0.913437,-0.0685937,0.845642,0.832128,-0.115916,-0.581525,-0.223969,0.193619,-0.238768,1.20506,-0.128535,-0.0547503,-0.196416,-0.179572,-0.390093,-0.239214,-2.33939,-0.307341,-0.279058,-0.769162,-1.16624,-1.85186,1.06825,-1.16783,0.916554,0.675454,0.657191,0.161628,-0.322557,0.0740254,-1.11372,0.400462,0.256225,1.2767,-1.25194,-0.953392,-0.589873,0.953267,0.20385,-1.61178,-0.0271384,-0.244183,-0.940522,0.624366,1.33499,-2.42106,-0.0993983,0.0209465,-0.894768,-0.532601,0.635124,-0.443554,1.18315,0.275187,0.293763,0.670444,-0.171357,0.415241,0.710353,-0.352332,-0.445409,0.469941,-1.0252,0.696668,-0.740156,-0.249543,0.136189,-2.05721,0.298704,1.27754,0.760148,1.7184,-0.0617601,0.430346,-0.678251,-0.120295,-1.7191,-2.28182,0.243156,-0.0236125,-0.305193,-2.6756,1.18392,0.860617,0.157132,0.688557,0.575976,0.774618,-0.849043,1.43132,-1.00805,1.89471,0.566126,0.826605,-1.60984,1.40348,-0.481359,0.00930049,0.113972,1.95469,-2.04236,-0.974712,-0.892576,-0.506792,-0.223765,-0.0558188,-1.45841,-0.907228,-1.00514,-1.36941,-1.17754,-0.756051,0.282106,0.528317,-0.166291,-0.127763,-1.95938,0.0704956,1.19819,0.826672,-0.393697,1.25706,-0.250833,0.692461,0.263649,-0.192564,-1.03054,-0.0141803,0.480954,-1.69332,0.578147,0.257959,0.320296,-1.13119,-0.877084,-0.0990046,-0.256396,-0.239401,1.83907,-0.592667,-0.951821,0.759519,1.87191,1.24127,1.79953,-0.572023,0.118107,-0.946566,-0.195974,-1.93146,-1.5359,0.279401,-0.858574,-1.50562,-0.377309,0.680105,0.751812,-0.483578,-0.0566399,0.843893,-0.590584,-1.54866,-0.125404,-0.0505595,0.236804,0.0440195,0.271326,0.496743,-0.276522,0.534092,0.927121,1.20519,0.31565,1.34123,1.14199,0.684186,-0.332741,0.916494,-0.534523,0.469594,1.20134,1.95757,1.41581,-0.816497,-0.798932,0.370647,-0.67009,0.561738,2.59991,-0.742179,-0.948318,-1.08092,-0.721695,1.11569,-0.87944,0.759595,0.981577,-1.99203,0.239944,-0.672274,-0.51009,1.64954,-1.50982,1.48974,-0.360708,0.331897,1.0928,-0.592497,-1.48426,1.76637,-0.666377,-0.597681,-1.74931,-1.5444,0.66106,1.76334,0.817577,-0.786617,0.144086,1.66988,0.4719,0.121418,0.839736,0.800338,-0.414775,0.51069,-0.114125,-0.942051,-0.762005,1.75732,0.384521,-0.138036,-1.80066,2.13703,1.44778,0.940555,-1.00221,-0.0562867,-0.804801,1.58892,-0.347559,0.00750782,-1.02463,1.09062,0.401611,-0.458097,-0.568751,0.771943,0.475755,0.000540304,0.252255,0.330555,-1.87355,-0.463233,-0.297197,-0.133187,-0.643824,0.903644,-0.146948,-0.107433,-0.530228,-1.24749,0.27954,-0.0980432,-0.86535,-0.211914,-0.313872,-1.91511,-1.16942,0.0247464,-0.437356,-0.123717,0.797245,0.374889,0.0175804,0.862693,0.263051,0.0497303,-1.1418,0.866006,0.140864,0.91012,1.28506,-1.29939,-1.44554,1.38499,-0.352137,-0.434191,2.58894,1.51688,1.0397,1.63624,0.387886,-1.52454,0.450551,-0.991634,-0.634463,0.508014,0.255328,-0.852875,-1.15425,1.59213,-0.932445,-0.0735401,-1.65636,0.718339,-0.724945,-0.912072,0.247135,-0.766667,1.71723,0.694,0.738253,0.977113,1.22426,0.123323,1.22479,0.651566,0.0493591,1.20562,0.405776,0.145692,-0.634544,1.15212,1.1771,-0.691379,1.45058,0.0879575,0.361179,1.49863,1.80024,1.13737,0.151242,-1.55013,-1.27781,0.248945,0.403932,1.71196,-1.40088,1.90506,-0.470857,0.311826,-0.981263,-0.382993,-0.738681,-0.338765,1.19947,0.903892,-0.567333,-1.00623,1.37239,-0.354831,1.40808,0.611756,0.903809,0.206904,0.21208,-0.206352,-0.524162,0.477542,-1.22331,-0.259239,-2.53594,1.28521,-2.0266,-1.47344,2.50143,-2.12955,2.14526,0.492998,-0.961539,0.206811,0.956103,-0.470812,0.308851,0.233875,2.12819,-1.19884,-0.0153976,0.335124,-0.471504,0.0835769,0.0187333,1.44126,-1.52513,0.313009,-0.581568,-1.65076,-2.23446,-0.223014,0.0769185,-1.09958,1.95241,-1.12096,1.37564,0.39996,2.1002,-1.22622,-0.343923,-0.760646,0.121983,-1.96496,1.62565,-1.40658,0.133015,2.00635,-0.995799,1.20526,-0.609727,-0.312352,0.123684,-0.245994,0.491584,0.319111,-1.04466,0.495194,-0.253735,1.41119,-0.56756,-1.30228,1.09906,1.31373,-0.0900313,1.95215,0.949061,-1.0359,1.17131,-1.18893,1.50331,0.38682,0.56494,-1.36886,-0.7817,0.536743,-0.725222,1.27791,1.20402,-0.00664175,2.17244,1.57482,-1.57834,2.05829,1.58737,0.220249,-0.0476004,0.92778,1.10707,1.4891,0.7172,0.0994616,0.796349,0.821698,1.83852,-0.341803,1.74101,-0.435336,-1.52391,-1.20853,0.155464,-1.2487,0.420365,0.681091,-0.909799,-1.73658,0.663172,-0.171469,0.200087,0.823703,-1.08156,-0.355216,-1.32926,-0.859909,0.0685791,-0.725892,0.820113,-0.882168,-1.04703,0.357113,-0.277918,1.02509,-1.19865,-1.69336,-0.905029,0.0550042,-0.101734,1.06564,-0.18891,0.471295,-0.576794,1.45865,-0.179221,-1.05727,-0.40611,-3.31529,1.22153,0.717509,0.472039,-1.80575,1.17426,-1.54117,-1.82175,0.272756,-0.360411,2.12292,-0.475482,-0.0559247,-0.939945,1.05539,0.462826,0.851765,0.357388,-1.93681,1.22115,0.368455,1.10723,1.07073,-0.778208,-0.404141,0.380355,1.15878,-0.541673,-0.692856,-0.607784,-0.493268,1.70383,-0.53029,0.179893,0.620405,0.691866,-0.393938,-0.365272,0.650148,0.755917,0.490784,0.477606,-0.869321,-0.244309,0.21539,-1.22317,-0.188167,0.443953,2.78498,-0.287035,0.00241905,-0.991488,0.190103,-1.12923,0.312584,-1.83841,-0.0667926,0.509688,-0.592721,0.494851,-0.99246,-0.0421479,-0.721317,0.185542,0.280253,0.419553,0.973315,-0.0063385,0.118248,0.457473,-1.59582,-0.581827,2.13592,-0.342395,-1.77805,1.28222,-0.344598,2.36309,-0.0858066,-0.636293,-0.804146,0.642485,-2.10587,-0.90718,-1.86533,1.28251,1.4067,-1.43847,1.62761,-0.820709,-0.59147,0.499039,-0.202078,-1.56428,-0.40327,-0.123754,0.515159,0.960639,-0.590982,-0.63081,-0.823509,-1.54977,0.508122,-1.09967,-1.20381,0.54964,-1.07875,1.43509,0.603308,-0.813847,0.833421,0.356694,0.450058,-0.0989108,-0.309313,0.861877,-1.23116,-1.41738,1.54679,-0.178754,0.211784,2.18997,0.209118,-1.73024,-0.450788,0.743288,0.950516,0.720361,0.41689,0.139361,1.04443,-0.871391,-0.5486,-0.738144,-0.401309,-1.75225,0.117644,-0.059173,-0.730496,0.490054,-1.35413,-0.583986,-0.904426,-0.715602,-1.22121,1.03725,-0.389252,1.16809,-0.268089,-0.360097,-1.3747,0.185741,0.887002,0.219237,-0.702774,-1.70295,0.257928,0.27771,0.485674,-0.397808,-0.38458,0.152117,-0.211321,0.714618,-0.908958,0.502254,-0.138773,1.01315,0.618277,0.184162,-0.609813,-1.63508,1.38591,-0.449845,-0.746627,-1.58793,-1.76922,1.40789,0.839815,0.943385,-0.473265,-2.09018,2.13853,-0.526963,1.38525,0.342355,1.04839,1.40722,0.286138,0.237248,-0.846909,2.39128,-0.962609,-1.58257,-0.214454,-1.57374,-0.705016,0.330762,0.263584,-0.650469,-0.583554,-2.04934,1.68047,1.28027,-1.35953,0.847669,0.385278,-1.17972,-0.286812,1.33971,-0.805864,0.164413,-0.360927,0.142046,2.47982,0.557712,-0.902979,1.11601,-1.21899,-0.79623,0.563259,-0.807458,0.648793,0.502162,-0.247549,1.08257,1.20038,0.359844,-0.883164,-1.37452,1.18809,-0.875877,-0.866671,-0.231599,0.0216663,-0.427115,-0.119895,2.14557,-1.12435,-0.172992,-0.970896,0.123382,0.22246,-0.997131,0.0870233,-0.94763,1.39563)
)
x
x=c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944,0.0505313,-0.730551,-0.393573,-0.441037,-0.113014,-0.23439,1.33834,0.0238353,1.75569,-0.592084,0.193023,2.35858,2.83542,-0.770908,2.56777,0.763801,-1.17758,0.0476455,-1.23425,-0.922346,0.685395,0.379197,-2.58622,0.0379023,0.814239,-0.409123,0.702159,0.221592,0.0629221,-0.467678,-0.579663,-0.0285545,0.34805,0.492484,-0.268436,0.0593377,-1.00421,1.67491,-0.726209,-0.875982,-0.449473,0.722712,1.17073,2.13975,-0.239757,-1.2033,-0.640274,1.54968,0.371682,-0.131305,-0.613299,0.14908,0.937905,-0.683983,-0.235396,-0.446957,1.17484,-0.572371,-0.0479286,-2.74776,1.35409,-0.629265,0.483006,-1.02637,1.7825,-0.774486,0.823291,-0.540678,1.8626,-1.70498,-1.09847,0.920589,-0.757891,0.145231,0.920078,0.988638,-0.280452,-1.57093,-1.27608,-0.127517,0.459375,-1.00312,0.741354,-2.56207,0.208709,-0.960484,1.5975,1.06281,0.226961,1.77395,-0.736686,2.05931,-0.373851,-0.314101,-1.29715,-0.383016,0.660181,-0.712546,-1.12765,0.522128,-1.99117,0.194943,-0.268178,-2.6003,-0.698022,0.270233,-0.488562,0.0924234,0.706693,0.383296,0.350079,-0.354873,-0.346443,0.246892,0.00577599,-0.922533,0.07008,1.49447,1.01989,0.73331,-0.904243,1.23939,-1.08378,1.20624,0.388979,-0.444891,0.0615206,0.71135,-0.605049,-1.85275,-0.98071,-0.951543,-0.584327,-0.47703,-0.0861755,-0.290669,-0.263845,0.639671,0.37658,2.60894,-1.29467,0.850824,1.19274,-0.475818,-1.69803,0.286802,-0.90465,0.142143,1.75214,-1.07145,-0.0118416,-0.809848,0.7608,1.07207,-1.20762,1.55586,0.187297,-0.445046,-0.326216,-0.360563,-0.913437,-0.0685937,0.845642,0.832128,-0.115916,-0.581525,-0.223969,0.193619,-0.238768,1.20506,-0.128535,-0.0547503,-0.196416,-0.179572,-0.390093,-0.239214,-2.33939,-0.307341,-0.279058,-0.769162,-1.16624,-1.85186,1.06825,-1.16783,0.916554,0.675454,0.657191,0.161628,-0.322557,0.0740254,-1.11372,0.400462,0.256225,1.2767,-1.25194,-0.953392,-0.589873,0.953267,0.20385,-1.61178,-0.0271384,-0.244183,-0.940522,0.624366,1.33499,-2.42106,-0.0993983,0.0209465,-0.894768,-0.532601,0.635124,-0.443554,1.18315,0.275187,0.293763,0.670444,-0.171357,0.415241,0.710353,-0.352332,-0.445409,0.469941,-1.0252,0.696668,-0.740156,-0.249543,0.136189,-2.05721,0.298704,1.27754,0.760148,1.7184,-0.0617601,0.430346,-0.678251,-0.120295,-1.7191,-2.28182,0.243156,-0.0236125,-0.305193,-2.6756,1.18392,0.860617,0.157132,0.688557,0.575976,0.774618,-0.849043,1.43132,-1.00805,1.89471,0.566126,0.826605,-1.60984,1.40348,-0.481359,0.00930049,0.113972,1.95469,-2.04236,-0.974712,-0.892576,-0.506792,-0.223765,-0.0558188,-1.45841,-0.907228,-1.00514,-1.36941,-1.17754,-0.756051,0.282106,0.528317,-0.166291,-0.127763,-1.95938,0.0704956,1.19819,0.826672,-0.393697,1.25706,-0.250833,0.692461,0.263649,-0.192564,-1.03054,-0.0141803,0.480954,-1.69332,0.578147,0.257959,0.320296,-1.13119,-0.877084,-0.0990046,-0.256396,-0.239401,1.83907,-0.592667,-0.951821,0.759519,1.87191,1.24127,1.79953,-0.572023,0.118107,-0.946566,-0.195974,-1.93146,-1.5359,0.279401,-0.858574,-1.50562,-0.377309,0.680105,0.751812,-0.483578,-0.0566399,0.843893,-0.590584,-1.54866,-0.125404,-0.0505595,0.236804,0.0440195,0.271326,0.496743,-0.276522,0.534092,0.927121,1.20519,0.31565,1.34123,1.14199,0.684186,-0.332741,0.916494,-0.534523,0.469594,1.20134,1.95757,1.41581,-0.816497,-0.798932,0.370647,-0.67009,0.561738,2.59991,-0.742179,-0.948318,-1.08092,-0.721695,1.11569,-0.87944,0.759595,0.981577,-1.99203,0.239944,-0.672274,-0.51009,1.64954,-1.50982,1.48974,-0.360708,0.331897,1.0928,-0.592497,-1.48426,1.76637,-0.666377,-0.597681,-1.74931,-1.5444,0.66106,1.76334,0.817577,-0.786617,0.144086,1.66988,0.4719,0.121418,0.839736,0.800338,-0.414775,0.51069,-0.114125,-0.942051,-0.762005,1.75732,0.384521,-0.138036,-1.80066,2.13703,1.44778,0.940555,-1.00221,-0.0562867,-0.804801,1.58892,-0.347559,0.00750782,-1.02463,1.09062,0.401611,-0.458097,-0.568751,0.771943,0.475755,0.000540304,0.252255,0.330555,-1.87355,-0.463233,-0.297197,-0.133187,-0.643824,0.903644,-0.146948,-0.107433,-0.530228,-1.24749,0.27954,-0.0980432,-0.86535,-0.211914,-0.313872,-1.91511,-1.16942,0.0247464,-0.437356,-0.123717,0.797245,0.374889,0.0175804,0.862693,0.263051,0.0497303,-1.1418,0.866006,0.140864,0.91012,1.28506,-1.29939,-1.44554,1.38499,-0.352137,-0.434191,2.58894,1.51688,1.0397,1.63624,0.387886,-1.52454,0.450551,-0.991634,-0.634463,0.508014,0.255328,-0.852875,-1.15425,1.59213,-0.932445,-0.0735401,-1.65636,0.718339,-0.724945,-0.912072,0.247135,-0.766667,1.71723,0.694,0.738253,0.977113,1.22426,0.123323,1.22479,0.651566,0.0493591,1.20562,0.405776,0.145692,-0.634544,1.15212,1.1771,-0.691379,1.45058,0.0879575,0.361179,1.49863,1.80024,1.13737,0.151242,-1.55013,-1.27781,0.248945,0.403932,1.71196,-1.40088,1.90506,-0.470857,0.311826,-0.981263,-0.382993,-0.738681,-0.338765,1.19947,0.903892,-0.567333,-1.00623,1.37239,-0.354831,1.40808,0.611756,0.903809,0.206904,0.21208,-0.206352,-0.524162,0.477542,-1.22331,-0.259239,-2.53594,1.28521,-2.0266,-1.47344,2.50143,-2.12955,2.14526,0.492998,-0.961539,0.206811,0.956103,-0.470812,0.308851,0.233875,2.12819,-1.19884,-0.0153976,0.335124,-0.471504,0.0835769,0.0187333,1.44126,-1.52513,0.313009,-0.581568,-1.65076,-2.23446,-0.223014,0.0769185,-1.09958,1.95241,-1.12096,1.37564,0.39996,2.1002,-1.22622,-0.343923,-0.760646,0.121983,-1.96496,1.62565,-1.40658,0.133015,2.00635,-0.995799,1.20526,-0.609727,-0.312352,0.123684,-0.245994,0.491584,0.319111,-1.04466,0.495194,-0.253735,1.41119,-0.56756,-1.30228,1.09906,1.31373,-0.0900313,1.95215,0.949061,-1.0359,1.17131,-1.18893,1.50331,0.38682,0.56494,-1.36886,-0.7817,0.536743,-0.725222,1.27791,1.20402,-0.00664175,2.17244,1.57482,-1.57834,2.05829,1.58737,0.220249,-0.0476004,0.92778,1.10707,1.4891,0.7172,0.0994616,0.796349,0.821698,1.83852,-0.341803,1.74101,-0.435336,-1.52391,-1.20853,0.155464,-1.2487,0.420365,0.681091,-0.909799,-1.73658,0.663172,-0.171469,0.200087,0.823703,-1.08156,-0.355216,-1.32926,-0.859909,0.0685791,-0.725892,0.820113,-0.882168,-1.04703,0.357113,-0.277918,1.02509,-1.19865,-1.69336,-0.905029,0.0550042,-0.101734,1.06564,-0.18891,0.471295,-0.576794,1.45865,-0.179221,-1.05727,-0.40611,-3.31529,1.22153,0.717509,0.472039,-1.80575,1.17426,-1.54117,-1.82175,0.272756,-0.360411,2.12292,-0.475482,-0.0559247,-0.939945,1.05539,0.462826,0.851765,0.357388,-1.93681,1.22115,0.368455,1.10723,1.07073,-0.778208,-0.404141,0.380355,1.15878,-0.541673,-0.692856,-0.607784,-0.493268,1.70383,-0.53029,0.179893,0.620405,0.691866,-0.393938,-0.365272,0.650148,0.755917,0.490784,0.477606,-0.869321,-0.244309,0.21539,-1.22317,
-0.188167,0.443953,2.78498,-0.287035,0.00241905,-0.991488,0.190103,-1.12923,0.312584,-1.83841,-0.0667926,0.509688,-0.592721,0.494851,-0.99246,-0.0421479,-0.721317,0.185542,0.280253,0.419553,0.973315,-0.0063385,0.118248,0.457473,-1.59582,-0.581827,2.13592,-0.342395,-1.77805,1.28222,-0.344598,2.36309,-0.0858066,-0.636293,-0.804146,0.642485,-2.10587,-0.90718,-1.86533,1.28251,1.4067,-1.43847,1.62761,-0.820709,-0.59147,0.499039,-0.202078,-1.56428,-0.40327,-0.123754,0.515159,0.960639,-0.590982,-0.63081,-0.823509,-1.54977,0.508122,-1.09967,-1.20381,0.54964,-1.07875,1.43509,0.603308,-0.813847,0.833421,0.356694,0.450058,-0.0989108,-0.309313,0.861877,-1.23116,-1.41738,1.54679,-0.178754,0.211784,2.18997,0.209118,-1.73024,-0.450788,0.743288,0.950516,0.720361,0.41689,0.139361,1.04443,-0.871391,-0.5486,-0.738144,-0.401309,-1.75225,0.117644,-0.059173,-0.730496,0.490054,-1.35413,-0.583986,-0.904426,-0.715602,-1.22121,1.03725,-0.389252,1.16809,-0.268089,-0.360097,-1.3747,0.185741,0.887002,0.219237,-0.702774,-1.70295,0.257928,0.27771,0.485674,-0.397808,-0.38458,0.152117,-0.211321,0.714618,-0.908958,0.502254,-0.138773,1.01315,0.618277,0.184162,-0.609813,-1.63508,1.38591,-0.449845,-0.746627,-1.58793,-1.76922,1.40789,0.839815,0.943385,-0.473265,-2.09018,2.13853,-0.526963,1.38525,0.342355,1.04839,1.40722,0.286138,0.237248,-0.846909,2.39128,-0.962609,-1.58257,-0.214454,-1.57374,-0.705016,0.330762,0.263584,-0.650469,-0.583554,-2.04934,1.68047,1.28027,-1.35953,0.847669,0.385278,-1.17972,-0.286812,1.33971,-0.805864,0.164413,-0.360927,0.142046,2.47982,0.557712,-0.902979,1.11601,-1.21899,-0.79623,0.563259,-0.807458,0.648793,0.502162,-0.247549,1.08257,1.20038,0.359844,-0.883164,-1.37452,1.18809,-0.875877,-0.866671,-0.231599,0.0216663,-0.427115,-0.119895,2.14557,-1.12435,-0.172992,-0.970896,0.123382,0.22246,-0.997131,0.0870233,-0.94763,1.39563)
)
x
len(x)
length(x)
x=c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944)
x
mean(x)
sd(x)
?sd
x2 = pow(x,2)
x*x
sd = sum(x*x) - n*mean(x)*mean(x)
x=c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944)
n = length(x)
sd = sum(x*x) - n*mean(x)*mean(x)
sd
sd/n
sd(x)
sd/(n-1)
sd/(n+1)
x=c(0.13453,0.46065,0.163712,0.298595,0.0102154,-0.546841,0.660682,1.48596,-2.55912,-0.539781,-0.628956,0.339587,2.10886,-0.287389,-1.05935,1.45502,0.925328,1.51561,1.00886,0.438945,-0.128149,1.77643,0.469861,0.668493,0.149386,1.53727,1.07825,1.17196,0.136395,-1.71463,-1.73985,-1.58694,-0.727862,-0.1128,0.326633,-0.0764704,0.389231,0.455092,2.91628,-3.20464,-2.09501,0.310367,0.404831,1.41863,0.926096,0.126072,-0.569566,0.882249,0.204175,-2.453,-0.379922,1.35717,1.32359,-0.208138,0.281664,-0.316253,-0.271609,-0.0590157,-0.0539041,0.129153,-0.388037,-0.644921,-0.900313,-0.587587,-2.37398,-0.981124,1.17503,-0.944311,1.06121,-1.08715,-1.8694,-0.0245811,-0.43059,0.98182,0.680064,-1.1258,-0.0395065,-0.126506,-0.368253,-0.149726,-0.432586,-0.127846,0.24827,1.151,-0.84942,1.16719,-0.0890962,-0.568668,-0.503789,-0.502095,-0.93429,-0.33775,-0.787764,-0.38751,-1.28537,-1.3623,-0.396654,-1.19639,0.954706,0.435944)
n = length(x)
sd = sum(x*x) - n*mean(x)*mean(x)
sd = sd/n
mean(x)
sd
rtnorm <- function(n, mu, sigma, a, b){
u = runif(n);
inverse = u*(pnorm(b, mu, sigma) - pnorm(a, mu, sigma)) + pnorm(a, mu, sigma);
qnorm(inverse, mu, sigma);
}
rtnorm(-105.72, 10, -4.42, 1.79e+308)
rtnorm(1,-105.72, 10, -4.42, 1.79e+308)
n = 1
mu = -105.72
sd = 10
a = -4.42
b = 1.79e+308
rtnorm(n,mu,sd,a,b)
u = runif(n);
u
inverse = u*(pnorm(b, mu, sigma) - pnorm(a, mu, sigma)) + pnorm(a, mu, sigma);
sigma=sd
inverse = u*(pnorm(b, mu, sigma) - pnorm(a, mu, sigma)) + pnorm(a, mu, sigma);
inverse
pnorm(b, mu, sigma)
?pnorm
pnorm(a, mu, sigma)
pnorm(a, mu, sigma)
rtnorm(n,mu,sd,mu+10*sd,b+15*sd)
rtnorm(n,mu,sd,mu+10*sd,b+11*sd)
rtnorm(n,mu,sd,mu+9*sd,b+11*sd)
rtnorm(n,mu,sd,mu+2*sd,b+11*sd)
rtnorm(n,mu,sd,mu+3*sd,b+11*sd)
rtnorm(n,mu,sd,mu+4*sd,b+11*sd)
rtnorm(n,mu,sd,mu+5*sd,b+11*sd)
rtnorm(n,mu,sd,mu+6*sd,b+11*sd)
rtnorm(n,mu,sd,mu+7*sd,b+11*sd)
rtnorm(n,mu,sd,mu+8*sd,b+11*sd)
rtnorm(n,mu,sd,mu+9*sd,b+11*sd)
rtnorm(n,mu,sd,mu+9*sd,b+11*sd)
runif(1,mu+9*sd,b+11*sd)
runif(1,mu+9*sd,b+11*sd)
runif(1,mu+9*sd,b+11*sd)
rtnorm(n,mu,sd,mu+9*sd,mu+11*sd)
rtnorm(n,mu,sd,mu+9*sd,mu+10*sd)
rtnorm(n,mu,sd,mu+8*sd,mu+10*sd)
rtnorm(n,mu,sd,mu+7*sd,mu+10*sd)
rtnorm(n,mu,sd,mu+7*sd,mu+8*sd)
rtnorm(n,mu,sd,mu+7*sd,mu+8*sd)
pnorm(sd,mu,sigma)
pnorm(sigma,mu,sigma)
pnorm(mu,mu,sigma)
pnorm(mu+sigma,mu,sigma)
pnorm(mu+2*sigma,mu,sigma)
pnorm(mu+3*sigma,mu,sigma)
pnorm(mu+4*sigma,mu,sigma)
pnorm(mu+5*sigma,mu,sigma)
pnorm(mu+6*sigma,mu,sigma)
setwd("/home/ramon/workspace/SMF/Debug")
df = read.csv("0-50-0-0-0-100.00000-0.01000.breakdown", header=FALSE)
View(df)
View(df)
df = read.csv("0-50-0-0-0-100.00000-0.01000.breakdown", header=FALSE, fill = TRUE)
View(df)
View(df)
df = read.csv("0-50-0-0-0-100.00000-0.01000.breakdown", header=FALSE, fill = TRUE, sep=",")
View(df)
View(df)
filename="0-50-0-0-0-100.00000-0.01000.breakdown"
no_col = max(count.fields(filename, sep = ","))
df = read.table(filename,sep=",",fill=TRUE,col.names=1:no_col)
View(df)
View(df)
which(df$X4 > 0)
df[317,]
df[317,1:10]
